<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="EPBYMINW5904" ignored="1" name="All groups exept logic" tests="26" failures="3" timestamp="15 Dec 2017 15:43:17 GMT" time="0.101" errors="0">
  <testcase name="ctgFromValue" time="0.006" classname="test.testng.CtgDoubleTest">
    <failure type="java.lang.AssertionError" message="expected [0.642] but found [0.7615941559557649]">
      <![CDATA[java.lang.AssertionError: expected [0.642] but found [0.7615941559557649]
	at test.testng.CtgDoubleTest.ctgFromValue(CtgDoubleTest.java:22)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- ctgFromValue -->
  <testcase name="sinFromValue" time="0.001" classname="test.testng.SinDoubleTest"/>
  <testcase name="sinFromValue" time="0.002" classname="test.testng.SinDoubleTest"/>
  <testcase name="sinFromValue" time="0.001" classname="test.testng.SinDoubleTest"/>
  <testcase name="checkDivisionByZeroThrowsException" time="0.001" classname="test.testng.DivLongTest"/>
  <testcase name="oneValueDivAnother" time="0.001" classname="test.testng.DivLongTest"/>
  <testcase name="oneValueDivAnother" time="0.001" classname="test.testng.DivLongTest">
    <failure type="java.lang.AssertionError" message="Invalid result of operation expected [-1.5] but found [-1.0]">
      <![CDATA[java.lang.AssertionError: Invalid result of operation expected [-1.5] but found [-1.0]
	at test.testng.DivLongTest.oneValueDivAnother(DivLongTest.java:25)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- oneValueDivAnother -->
  <testcase name="oneValueDivAnother" time="0.001" classname="test.testng.DivLongTest">
    <failure type="java.lang.AssertionError" message="Invalid result of operation expected [0.1] but found [0.0]">
      <![CDATA[java.lang.AssertionError: Invalid result of operation expected [0.1] but found [0.0]
	at test.testng.DivLongTest.oneValueDivAnother(DivLongTest.java:25)
... Removed 29 stack frames]]>
    </failure>
  </testcase> <!-- oneValueDivAnother -->
  <testcase name="oneValueDivAnother" time="0.001" classname="test.testng.DivLongTest"/>
  <testcase name="sqrtFromValue" time="0.0" classname="test.testng.SqrtDoubleTest"/>
  <testcase name="sqrtFromValue" time="0.002" classname="test.testng.SqrtDoubleTest"/>
  <testcase name="sqrtFromValue" time="0.001" classname="test.testng.SqrtDoubleTest"/>
  <testcase name="sqrtFromValue" time="0.001" classname="test.testng.SqrtDoubleTest"/>
  <testcase name="oneValueMultAnother" time="0.0" classname="test.testng.MultDoubleTest"/>
  <testcase name="oneValueMultAnother" time="0.001" classname="test.testng.MultDoubleTest"/>
  <testcase name="oneValueMultAnother" time="0.0" classname="test.testng.MultDoubleTest"/>
  <testcase name="oneValueMultAnother" time="0.001" classname="test.testng.MultDoubleTest"/>
  <testcase name="oneValueMinusAnother" time="0.0" classname="test.testng.SubDoubleTest"/>
  <testcase name="oneValueMinusAnother" time="0.001" classname="test.testng.SubDoubleTest"/>
  <testcase name="oneValueMinusAnother" time="0.001" classname="test.testng.SubDoubleTest"/>
  <testcase name="oneValueMinusAnother" time="0.0" classname="test.testng.SubDoubleTest"/>
  <testcase name="oneValueMinusAnother" time="0.0" classname="test.testng.SubDoubleTest"/>
  <testcase name="oneValuePlusAnother" time="0.001" classname="test.testng.SumLongTest"/>
  <testcase name="oneValuePlusAnother" time="0.001" classname="test.testng.SumLongTest"/>
  <testcase name="oneValuePlusAnother" time="0.0" classname="test.testng.SumLongTest"/>
  <testcase name="oneValuePlusAnother" time="0.001" classname="test.testng.SumLongTest"/>
  <testcase name="NegativeValueCheck" time="0.0" classname="test.testng.NegativeLongTest">
    <ignored/>
  </testcase> <!-- NegativeValueCheck -->
</testsuite> <!-- All groups exept logic -->
